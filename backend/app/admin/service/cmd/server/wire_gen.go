// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/go-kratos/kratos/v2/registry"
	"github.com/tx7do/kratos-bootstrap/api/gen/go/conf/v1"
	"kratos-upload-file-example/app/admin/service/internal/data"
	"kratos-upload-file-example/app/admin/service/internal/server"
	"kratos-upload-file-example/app/admin/service/internal/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(logger log.Logger, registrar registry.Registrar, bootstrap *v1.Bootstrap) (*kratos.App, func(), error) {
	minIOClient := data.NewMinIoClient(bootstrap, logger)
	fileService := service.NewFileService(logger, minIOClient)
	uEditorService := service.NewUEditorService(logger, minIOClient)
	httpServer := server.NewRESTServer(bootstrap, logger, fileService, uEditorService)
	app := newApp(logger, registrar, httpServer)
	return app, func() {
	}, nil
}
